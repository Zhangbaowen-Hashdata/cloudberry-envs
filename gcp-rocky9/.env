# Function to retrieve the public IP and wait for SSH availability and Docker group membership
wait_for_ssh_and_docker() {
  local region="$1"
  local env_prefix="$2"
  local username="$3"
  local hostname

  # Retrieve the IP address
  hostname=$(aws ec2 describe-instances --region "$region" --filters "Name=tag:Name,Values=${env_prefix}-instance-0" --query "Reservations[*].Instances[*].PublicIpAddress" --output text)

  if [ -z "$hostname" ]; then
    echo "Failed to retrieve IP address for ${env_prefix}-instance-0 in region ${region}."
    return 1
  fi

  echo "Waiting for SSH to become available on ${hostname}..."

  # Loop to check SSH availability
  for ((i=1; i<=30; i++)); do
    if nc -zv "${hostname}" 22 2>&1 | grep -q 'succeeded'; then
      ssh-keyscan "${hostname}" >> "$HOME/.ssh/known_hosts"
      echo "SSH is available on ${hostname}"

      # Check if the user has been added to the Docker group
      for ((j=1; j<=30; j++)); do
        if ssh -i "${env_prefix}_generated_key.pem" "${username}@${hostname}" "id -nG | grep -q '\bdocker\b'"; then
          echo "User ${username} has been added to the Docker group on ${hostname}"
          return 0
        else
          echo "User ${username} is not in the Docker group yet. Retry $j/30..."
          sleep 10
        fi

        if [ $j -eq 30 ]; then
          echo "User ${username} was not added to the Docker group after 30 attempts. Exiting."
          return 1
        fi
      done
    else
      echo "SSH is not available yet. Retry $i/30..."
      sleep 10
    fi

    if [ $i -eq 30 ]; then
      echo "SSH is still not available after 30 attempts. Exiting."
      return 1
    fi
  done
}

# Alias to call the function with predefined parameters
alias lw='wait_for_ssh_and_docker ${TF_VAR_region} ${TF_VAR_env_prefix} ${TF_VAR_default_username}'

# Alias for SSHing into the instance
alias lssh='gcloud compute ssh "${TF_VAR_VM_NAME}-1" --project "${TF_VAR_GCP_PROJECT}" --zone "${TF_VAR_GCP_ZONE}" -- -o ServerAliveInterval=240 -A'
