# Fetch the current project ID from gcloud configuration, suppressing error output
export TF_VAR_GCP_PROJECT=$(gcloud config get-value project 2>/dev/null)

# Define the GCP region and zone
export TF_VAR_GCP_REGION=us-east1
export TF_VAR_GCP_ZONE=us-east1-b

# Construct the service account file path in the peer "creds" directory
export TF_VAR_SRVC_ACCT_FILE="${PWD}/../creds/${TF_VAR_GCP_PROJECT}-srvc.json"

# Get the current directory name and extract the suffix for VM naming
CURRENT_DIR=${PWD##*/}
export TF_VAR_VM_NAME=$(echo $CURRENT_DIR | awk -F '-' '{print $NF}')

# Fetch the public IP address of the current machine
export TF_VAR_PUBLIC_IP=$(curl -s https://api.ipify.org)

# Get the currently logged-in user
export TF_VAR_GCP_USER_NAME=$(whoami)

# Define the filter for the boot image based on the environment
# Example for Ubuntu 24.04
export BOOT_IMAGE_FILTER="name='ubuntu-minimal-2404-noble' AND architecture='X86_64'"

# Display the environment variables and their values
echo "======================================================================"
echo "Environment variables set by direnv:"
echo "----------------------------------------------------------------------"
echo "BOOT_IMAGE_FILTER           = $BOOT_IMAGE_FILTER"
echo ""
echo "TF_VAR_GCP_PROJECT          = $TF_VAR_GCP_PROJECT"
echo "TF_VAR_GCP_REGION           = $TF_VAR_GCP_REGION"
echo "TF_VAR_GCP_USER_NAME        = $TF_VAR_GCP_USER_NAME"
echo "TF_VAR_GCP_ZONE             = $TF_VAR_GCP_ZONE"
echo "TF_VAR_PUBLIC_IP            = $TF_VAR_PUBLIC_IP"
echo "TF_VAR_SRVC_ACCT_FILE       = $TF_VAR_SRVC_ACCT_FILE"
echo "TF_VAR_VM_NAME              = $TF_VAR_VM_NAME"
echo "======================================================================"
echo ""
